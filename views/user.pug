extends layout.pug

block content
  .container#content
    .row.small-margin-top
      .col-lg-12
        .jumbotron.jumbotron-fluid.text-center.bg-white
          .container
            h1.display-4 WELCOME #{username.toUpperCase()} 
            p.lead LMD VSC is at your service
            a.btn.btn-outline-primary.small-margin-top.ml-2(href=`/users?username=${username}`) All Users
            a.btn.btn-outline-danger.small-margin-top.ml-2(href='/') Log Out
    
    .row.justify-content-center.text-center.mb-4
      .col-sm-8.text-center
        h2.text-info.font Command Line Guide
      .col-sm-4
        h2.text-info.font Note
        

    .row.justify-content-center.mb-4
      .col-sm-8#command-guide.border.border-info.p-4.border-right-0
        p.text-dark.font-weight-bold create | &lt;project name&gt;
        ul
          li.text-secondary Example: create alpha /path

        p.text-dark.font-weight-bold checkin | &lt;project name&gt; | &lt;(optional) from path&gt;
        ul
          li.text-secondary Example: checkin alpha
          li.text-secondary Example: checkin alpha /FromPath
        
        p.text-dark.font-weight-bold checkout | &lt;project name&gt; | &lt;from_username&gt; | &lt;from manifest id&gt; OR &lt;label name
        ul 
          li.text-secondary Example with ID&emsp;&nbsp;&nbsp;: checkout Bob ProjectBeta 123456
          li.text-secondary Example with Label:  checkout Bob ProjectBeta somelabel 

        p.text-dark.font-weight-bold mergeout | &lt;project name&gt; | &lt;target manifest id&gt; | &lt;source username&gt; | &lt;souce manifest id&gt;
        ul
          li.text-secondary Example: mergeout alpha aManifestID Bob bManifestID
        
        p.text-dark.font-weight-bold mergein | &lt;project name&gt; 
        ul
          li.text-secondary Example: mergein alpha

        p.text-dark.font-weight-bold label | &lt;project name&gt; | &lt;label name (one string)&gt; | &lt;manifest id&gt;
        ul
          li.text-secondary Example: label alpha my_label 123456

          
      .col-sm-4.border.border-info.p-4
        ul.text-secondary
          li Assume 
            span.text-danger #{username.toUpperCase()} 
            span issues these 
            span.text-danger commands
          li Target = 
            span.text-danger #{username.toUpperCase()}
          li Source = 
            span.text-danger other [USERNAME]
          li 
            span.text-danger.font-weight-bold | 
            span #{"="} a space between element


    .row.text-center.justify-content-center
      .col-lg-9
        form(method='POST').form
          .input-group.mb-3
            .input-group-prepend
              span.input-group-text.text-info#command-line-prepend Command-line
            textarea.form-control(type="text", aria-label="Your command here..." name="commandInput")
          button#command-button.btn.btn-outline-primary.small-margin-top(type='submit') Submit     

    //- .row.justify-content-center.text-center.mt-5
    //-   .col-sm-9
    //-     h2.text-info.font Old Ways (Recondering...)
    //- .row.text-center.justify-content-center
    //-   .col-lg-9
    //-     form(method='POST')
    //-       .btn-group.btn-group-toggle(data-toggle='buttons')
    //-         label.btn.btn-secondary Create Repo 
    //-           input#create-repo-button(type='radio' name='command_option' value="create" autocomplete='off')
    //-         label.btn.btn-secondary Check In 
    //-           input#check-in-button(type='radio' name='command_option' value="check-in" autocomplete='off')
    //-         label.btn.btn-secondary Check Out 
    //-           input#check-out-button(type='radio' name='command_option' value="check-out" autocomplete='off')
    //-         label.btn.btn-secondary Label 
    //-           input#label-button(type='radio' name='command_option' value="label" autocomplete='off')
    //-       p#form-message.mt-3.text-danger
    //-       input#repo-name.form-control.user-input.small-margin-bottom(type='text' name='repoName' placeholder='Repo Name')
    //-       input#source-path.form-control.user-input.small-margin-bottom(type='text' name='sourcePath' placeholder='From Path (Absolute)')
    //-       input#label.form-control.user-input.small-margin-bottom(type='text' name='label' placeholder='Enter Label')
    //-       input#manifest-target.form-control.user-input.small-margin-bottom(type='text' name='manifestID' placeholder='Enter manifest ID')
    //-       input#dest-path.form-control.user-input.small-margin-bottom(type='text' name='destPath' placeholder='To Path (Absolute)')
    //-       input#create-repo-button.btn.btn-outline-primary.small-margin-top(type='submit')
    .row.justify-content-center.m-4
      pre . . . 
      
    .row
      .col-lg-12
        .data-list.mt-2
          h5.text-center.mb-4.text-primary #{projList.length} 
            if  projList.length < 2 
              span REPO:
            else
              span REPOS:
          .card-columns
            each proj in projList
              .card.border-info.rounded
                  .card-body
                      h5.card-title.badge.badge-primary #{proj.projectName}
                      .card-text
                        if proj.labels.length > 0
                          p 
                            span.font-weight-bold Labels:
                            ul
                              each label in proj.labels
                                - const labelName = Object.keys(label)
                                li
                                  span.badge.badge-light #{labelName} &rarr; 
                                  span #{label[labelName]}
                        p 
                          span.font-weight-bold Manifests:
                          ul
                           each manifest in proj.manifests
                            li
                              span.badge.badge-success #{manifest.id}
                              ul
                                li
                                  span.badge.badge-light command
                                  span  #{manifest.command}
                                li 
                                  span.badge.badge-light datetime 
                                  span #{manifest.datetime.replace(/T/, " ").replace(/\..+/, "")}
                                li 
                                  span.badge.badge-light Check-in file counts: 
                                  span #{manifest.structure.length}
                                    

